{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/zacharygarcia/Dev/react/mymap/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/zacharygarcia/Dev/react/mymap/src/components/map.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  z-index: 1;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport mapboxgl from 'mapbox-gl';\nimport mapData from './data.json';\nimport TileList from './tilelist';\nimport CategoryList from './listcategories';\nimport 'mapbox-gl/dist/mapbox-gl.css'; // publicly available token\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\nconst StyledMap = styled.div(_templateObject());\nlet filteredLocations = [];\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onCategoryClick = category => {\n      let updatedCategories = this.state.activeCategories;\n      updatedCategories[category] = !updatedCategories[category];\n      this.setState({\n        activeCategories: updatedCategories\n      });\n      this.loadMapMarkers(this.map);\n    };\n\n    this.loadMapMarkers = map => {\n      //// ADDING FAV SPOTS ////\n      // after the map component is mounted, we want to add points to it\n      // var marker;\n      // map.removeLayer(el);\n      map.eachLayer(function (layer) {\n        map.removeLayer(layer);\n      });\n      let filteredLocations = mapData.features.filter(item => {\n        return this.state.activeCategories[item.properties.category] === true;\n      });\n      filteredLocations.forEach(function (marker) {\n        // create a DOM element for the marker - these are the divs which house each emoji marker\n        var el = document.createElement('div');\n        el.innerHTML += marker.properties.emoji;\n        el.style.fontSize = 'x-large';\n        el.id = marker.id; // el.addEventListener('click', function() {\n        // window.alert('nothing to see here');\n        // });\n\n        new mapboxgl.Marker(el).setLngLat(marker.geometry.coordinates).addTo(map);\n      });\n    };\n\n    this.flyToLocation = location => {\n      this.map.flyTo({\n        center: location,\n        zoom: 17\n      });\n    };\n\n    this.state = {\n      lng: -122.4397,\n      lat: 37.7626,\n      zoom: 10,\n      activeCategories: {\n        play: false,\n        eat: false,\n        drink: false,\n        outdoors: false,\n        work: false\n      }\n    };\n    this.map = null;\n    this.onCategoryClick = this.onCategoryClick.bind(this);\n  }\n\n  componentDidMount() {\n    const _this$state = this.state,\n          lng = _this$state.lng,\n          lat = _this$state.lat,\n          zoom = _this$state.zoom;\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/light-v9',\n      center: [lng, lat],\n      zoom\n    });\n    this.map = map; // this is necessary to make 'map' available in the .flyto function\n\n    this.loadMapMarkers(map);\n    map.on('move', () => {\n      const _map$getCenter = map.getCenter(),\n            lng = _map$getCenter.lng,\n            lat = _map$getCenter.lat;\n\n      this.setState({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          lng = _this$state2.lng,\n          lat = _this$state2.lat,\n          zoom = _this$state2.zoom;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(StyledMap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      style: {\n        position: 'fixed',\n        top: 0,\n        bottom: 0,\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(TileList, {\n      flyToLocation: this.flyToLocation.bind(this),\n      categories: this.state.activeCategories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(CategoryList, {\n      activeCategories: this.state.activeCategories,\n      onCategoryClick: this.onCategoryClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/zacharygarcia/Dev/react/mymap/src/components/map.js"],"names":["React","styled","mapboxgl","mapData","TileList","CategoryList","accessToken","StyledMap","div","filteredLocations","Map","Component","constructor","props","onCategoryClick","category","updatedCategories","state","activeCategories","setState","loadMapMarkers","map","eachLayer","layer","removeLayer","features","filter","item","properties","forEach","marker","el","document","createElement","innerHTML","emoji","style","fontSize","id","Marker","setLngLat","geometry","coordinates","addTo","flyToLocation","location","flyTo","center","zoom","lng","lat","play","eat","drink","outdoors","work","bind","componentDidMount","container","mapContainer","on","getCenter","toFixed","getZoom","render","position","top","bottom","width","height"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport mapboxgl from 'mapbox-gl'\n\nimport mapData from './data.json'\nimport TileList from './tilelist'\nimport CategoryList from './listcategories'\n\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\n\n\n// publicly available token\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\nconst StyledMap = styled.div`\n  z-index: 1;\n`\nlet filteredLocations = []\n\nclass Map extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -122.4397,\n      lat: 37.7626,\n      zoom: 10,\n      activeCategories: {\n        play: false,\n        eat: false,\n        drink: false,\n        outdoors: false,\n        work: false,\n      },\n    };\n    this.map = null;\n    this.onCategoryClick = this.onCategoryClick.bind(this);\n  }\n\n  onCategoryClick = (category) =>{\n    let updatedCategories = this.state.activeCategories;\n    updatedCategories[category] = !updatedCategories[category];\n    this.setState({activeCategories:updatedCategories});\n    this.loadMapMarkers(this.map);\n  }\n\n  loadMapMarkers = (map) =>{\n        //// ADDING FAV SPOTS ////\n    // after the map component is mounted, we want to add points to it\n\n    // var marker;\n    // map.removeLayer(el);\n    map.eachLayer(function (layer) {\n      map.removeLayer(layer);\n    });\n\n    let filteredLocations = mapData.features.filter((item) => {\n      return this.state.activeCategories[item.properties.category] === true\n    })\n\n    filteredLocations.forEach(function(marker) {\n\n      // create a DOM element for the marker - these are the divs which house each emoji marker\n      var el = document.createElement('div');\n      \n      el.innerHTML += marker.properties.emoji;\n      el.style.fontSize = 'x-large';\n      el.id = marker.id;\n      \n      // el.addEventListener('click', function() {\n      // window.alert('nothing to see here');\n      // });\n      \n      new mapboxgl.Marker(el)\n      .setLngLat(marker.geometry.coordinates)\n      .addTo(map);\n\n      \n    });\n  }\n\n\n\n  componentDidMount() {\n    const { lng, lat, zoom } = this.state;\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/light-v9',\n      center: [lng, lat],\n      zoom\n    });\n\n    this.map = map;\n    // this is necessary to make 'map' available in the .flyto function\n\n\n    this.loadMapMarkers(map)\n\n\n    map.on('move', () => {\n      const { lng, lat } = map.getCenter();\n\n      this.setState({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n  }\n\n\n  flyToLocation = (location) => {\n    this.map.flyTo({\n      center: location,\n      zoom: 17\n    })\n  }\n\n  \n  render() {\n    const { lng, lat, zoom } = this.state;\n\n    return (\n      <div>\n      <StyledMap>\n        <div ref={el => this.mapContainer = el} style={{\n          position: 'fixed',\n          top: 0,\n          bottom: 0,\n          width: '100%',\n          height: '100%',\n          }} />\n      </StyledMap>\n      <TileList \n        flyToLocation={this.flyToLocation.bind(this)}\n        categories={this.state.activeCategories}\n      />\n      <CategoryList\n        activeCategories={this.state.activeCategories}\n        onCategoryClick={this.onCategoryClick}\n      />\n      </div>\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}