{"ast":null,"code":"var _jsxFileName = \"/Users/zacharygarcia/Dev/react/experiments/pixel-color/src/components/map.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport data from './data.json';\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\nconst options = [{\n  name: 'Population',\n  description: 'Estimated total population',\n  property: 'pop_est',\n  stops: [[0, '#f8d5cc'], [1000000, '#f4bfb6'], [5000000, '#f1a8a5'], [10000000, '#ee8f9a'], [50000000, '#ec739b'], [100000000, '#dd5ca8'], [250000000, '#c44cc0'], [500000000, '#9f43d7'], [1000000000, '#6e40e6']]\n}, {\n  name: 'GDP',\n  description: 'Estimate total GDP in millions of dollars',\n  property: 'gdp_md_est',\n  stops: [[0, '#f8d5cc'], [1000, '#f4bfb6'], [5000, '#f1a8a5'], [10000, '#ee8f9a'], [50000, '#ec739b'], [100000, '#dd5ca8'], [250000, '#c44cc0'], [5000000, '#9f43d7'], [10000000, '#6e40e6']]\n}];\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -122.4397,\n      lat: 37.7626,\n      zoom: 10,\n      active: options[0]\n    };\n  }\n\n  componentDidMount() {\n    const _this$state = this.state,\n          lng = _this$state.lng,\n          lat = _this$state.lat,\n          zoom = _this$state.zoom;\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/light-v9',\n      center: [lng, lat],\n      zoom\n    });\n    map.on('load', () => {\n      map.addSource('countries', {\n        type: 'geojson',\n        data\n      });\n      map.addLayer({\n        id: 'countries',\n        type: 'fill',\n        source: 'countries'\n      }, 'country-label-lg'); // ID metches `mapbox/streets-v9`\n\n      this.setFill();\n    });\n    map.on('move', () => {\n      const _map$getCenter = map.getCenter(),\n            lng = _map$getCenter.lng,\n            lat = _map$getCenter.lat;\n\n      this.setState({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n  }\n\n  setFill() {\n    const _this$state$active = this.state.active,\n          property = _this$state$active.property,\n          stops = _this$state$active.stops;\n    this.map.setPaintProperty('countries', 'fill-color', {\n      property,\n      stops\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          lng = _this$state2.lng,\n          lat = _this$state2.lat,\n          zoom = _this$state2.zoom;\n    return React.createElement(\"div\", {\n      className: \"Map\",\n      ref: el => this.mapContainer = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/zacharygarcia/Dev/react/experiments/pixel-color/src/components/map.js"],"names":["React","ReactDOM","mapboxgl","data","accessToken","options","name","description","property","stops","Map","Component","constructor","props","state","lng","lat","zoom","active","componentDidMount","map","container","mapContainer","style","center","on","addSource","type","addLayer","id","source","setFill","getCenter","setState","toFixed","getZoom","setPaintProperty","render","el"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport mapboxgl from 'mapbox-gl'\nimport data from './data.json'\n\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\n\n\nconst options = [{\n  name: 'Population',\n  description: 'Estimated total population',\n  property: 'pop_est',\n  stops: [\n    [0, '#f8d5cc'],\n    [1000000, '#f4bfb6'],\n    [5000000, '#f1a8a5'],\n    [10000000, '#ee8f9a'],\n    [50000000, '#ec739b'],\n    [100000000, '#dd5ca8'],\n    [250000000, '#c44cc0'],\n    [500000000, '#9f43d7'],\n    [1000000000, '#6e40e6']\n  ]\n}, {\n  name: 'GDP',\n  description: 'Estimate total GDP in millions of dollars',\n  property: 'gdp_md_est',\n  stops: [\n    [0, '#f8d5cc'],\n    [1000, '#f4bfb6'],\n    [5000, '#f1a8a5'],\n    [10000, '#ee8f9a'],\n    [50000, '#ec739b'],\n    [100000, '#dd5ca8'],\n    [250000, '#c44cc0'],\n    [5000000, '#9f43d7'],\n    [10000000, '#6e40e6']\n  ]\n}]\n\n\n\n\n\nclass Map extends React.Component {\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      lng: -122.4397,\n      lat: 37.7626,\n      zoom: 10,\n      active: options[0]\n    };\n  }\n\n  componentDidMount() {\n    const { lng, lat, zoom } = this.state;\n\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/light-v9',\n      center: [lng, lat],\n      zoom\n    });\n\n\n\n\n\n\n    map.on('load', () => {\n      map.addSource('countries', {\n        type: 'geojson',\n        data\n      });\n\n      map.addLayer({\n        id: 'countries',\n        type: 'fill',\n        source: 'countries'\n      }, 'country-label-lg'); // ID metches `mapbox/streets-v9`\n\n      this.setFill();\n    });\n\n\n\n\n\n    map.on('move', () => {\n      const { lng, lat } = map.getCenter();\n\n      this.setState({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n  }\n\n  setFill() {\n    const { property, stops } = this.state.active;\n    this.map.setPaintProperty('countries', 'fill-color', {\n      property,\n      stops\n    });\n  }\n\n  render() {\n    const { lng, lat, zoom } = this.state;\n\n    return (\n      <div  className=\"Map\" ref={el => this.mapContainer = el} >\n      {/*\n        <div className=\"inline-block absolute top left mt12 ml12 bg-darken75 color-white z1 py6 px12 round-full txt-s txt-bold\">\n          <div>{`Longitude: ${lng} Latitude: ${lat} Zoom: ${zoom}`}</div>\n        </div>\n      */}\n      </div>\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}