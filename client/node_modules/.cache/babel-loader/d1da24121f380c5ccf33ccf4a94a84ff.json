{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/zacharygarcia/Dev/react/mymap/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/zacharygarcia/Dev/react/mymap/src/components/map.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  z-index: 1;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport mapboxgl from 'mapbox-gl';\nimport mapData from './data.json';\nimport TileList from './tilelist';\nimport CategoryList from './listcategories';\nimport 'mapbox-gl/dist/mapbox-gl.css'; // publicly available token\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\nconst StyledMap = styled.div(_templateObject());\nlet filteredLocations = [];\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onCategoryClick = category => {\n      let updatedCategories = this.state.activeCategories;\n      updatedCategories[category] = !updatedCategories[category];\n      this.setState({\n        activeCategories: updatedCategories\n      });\n      this.clearMapMarkers(this.map);\n      this.loadMapMarkers(this.map);\n    };\n\n    this.clearMapMarkers = map => {\n      // map.removeLayer('1');\n      // map.removeLayer(el);\n      // map.marker.remove();\n      var currentMarkers = document.getElementsByClassName('marker'); // console.log(currentMarkers);\n\n      var currentMarkersLength = currentMarkers.length;\n\n      for (let i = 0; i < currentMarkersLength; i++) {\n        // console.log('removing ', currentMarkers[i]);\n        currentMarkers[0].remove(); // this.loadMapMarkers(this.map);\n      } // console.log(currentMarkers);\n      // // const currentMarkersArray = Array.from(currentMarkers);\n      // console.log(currentMarkers.length)\n      // var currentMarkersArray = []\n      // for (let i=0; i < 9; i++){\n      //   currentMarkersArray.push('yoohooo')\n      // }\n      // console.log(currentMarkersArray);\n      // currentMarkers.forEach((marker) => {\n      //   marker.remove();\n      // })\n\n    };\n\n    this.loadMapMarkers = map => {\n      //// ADDING FAV SPOTS ////\n      // after the map component is mounted, we want to add points to it\n      // map.removeLayer(1);\n      let filteredLocations = mapData.features.filter(item => {\n        return this.state.activeCategories[item.properties.category] === true;\n      });\n      filteredLocations.forEach(function (marker) {\n        // create a DOM element for the marker - these are the divs which house each emoji marker\n        var el = document.createElement('div');\n        el.innerHTML += marker.properties.emoji;\n        el.style.fontSize = 'x-large';\n        el.id = marker.id;\n        el.className = 'marker';\n        el.coordinates = marker.geometry.coordinates;\n        el.title = marker.properties.name;\n        el.addEventListener('click', function () {\n          map.flyTo({\n            center: marker._lngLat,\n            zoom: 17\n          });\n        });\n        var popup = new mapboxgl.Popup({\n          closeButton: false,\n          closeOnClick: false\n        });\n        el.addEventListener('mouseenter', function () {\n          // TODO: might be cool to zoom in a bit\n          // TODO: move popup out of the way\n          popup.setLngLat(marker._lngLat).setHTML(el.title).addTo(map); // console.log(marker)\n        });\n        el.addEventListener('mouseleave', function () {\n          // TODO: might be cool to zoom out a bit\n          popup.remove();\n        });\n        var marker = new mapboxgl.Marker(el).setLngLat(marker.geometry.coordinates).addTo(map);\n      });\n    };\n\n    this.flyToLocation = location => {\n      this.map.flyTo({\n        center: location,\n        zoom: 17\n      });\n    };\n\n    this.state = {\n      lng: -122.4397,\n      lat: 37.7626,\n      zoom: 10,\n      activeCategories: {\n        play: false,\n        eat: false,\n        drink: false,\n        outdoors: false,\n        work: false\n      }\n    };\n    this.map = null;\n    this.onCategoryClick = this.onCategoryClick.bind(this);\n  }\n\n  componentDidMount() {\n    const _this$state = this.state,\n          lng = _this$state.lng,\n          lat = _this$state.lat,\n          zoom = _this$state.zoom;\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/light-v9',\n      center: [lng, lat],\n      zoom\n    });\n    this.map = map; // this is necessary to make 'map' available in the .flyto function\n\n    this.loadMapMarkers(map);\n    map.on('move', () => {\n      const _map$getCenter = map.getCenter(),\n            lng = _map$getCenter.lng,\n            lat = _map$getCenter.lat;\n\n      this.setState({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          lng = _this$state2.lng,\n          lat = _this$state2.lat,\n          zoom = _this$state2.zoom;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(StyledMap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      style: {\n        position: 'fixed',\n        top: 0,\n        bottom: 0,\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(TileList, {\n      flyToLocation: this.flyToLocation.bind(this),\n      categories: this.state.activeCategories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(CategoryList, {\n      activeCategories: this.state.activeCategories,\n      onCategoryClick: this.onCategoryClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/zacharygarcia/Dev/react/mymap/src/components/map.js"],"names":["React","styled","mapboxgl","mapData","TileList","CategoryList","accessToken","StyledMap","div","filteredLocations","Map","Component","constructor","props","onCategoryClick","category","updatedCategories","state","activeCategories","setState","clearMapMarkers","map","loadMapMarkers","currentMarkers","document","getElementsByClassName","currentMarkersLength","length","i","remove","features","filter","item","properties","forEach","marker","el","createElement","innerHTML","emoji","style","fontSize","id","className","coordinates","geometry","title","name","addEventListener","flyTo","center","_lngLat","zoom","popup","Popup","closeButton","closeOnClick","setLngLat","setHTML","addTo","Marker","flyToLocation","location","lng","lat","play","eat","drink","outdoors","work","bind","componentDidMount","container","mapContainer","on","getCenter","toFixed","getZoom","render","position","top","bottom","width","height"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport mapboxgl from 'mapbox-gl'\n\nimport mapData from './data.json'\nimport TileList from './tilelist'\nimport CategoryList from './listcategories'\n\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\n\n\n// publicly available token\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\nconst StyledMap = styled.div`\n  z-index: 1;\n`\nlet filteredLocations = []\n\nclass Map extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -122.4397,\n      lat: 37.7626,\n      zoom: 10,\n      activeCategories: {\n        play: false,\n        eat: false,\n        drink: false,\n        outdoors: false,\n        work: false,\n      },\n    };\n    this.map = null;\n    this.onCategoryClick = this.onCategoryClick.bind(this);\n  }\n\n  onCategoryClick = (category) =>{\n    let updatedCategories = this.state.activeCategories;\n    updatedCategories[category] = !updatedCategories[category];\n    this.setState({activeCategories:updatedCategories});\n    this.clearMapMarkers(this.map);\n    this.loadMapMarkers(this.map);\n  }\n\n  clearMapMarkers = (map) =>{\n    // map.removeLayer('1');\n    // map.removeLayer(el);\n    // map.marker.remove();\n\n    var currentMarkers = document.getElementsByClassName('marker');\n    // console.log(currentMarkers);\n    var currentMarkersLength = currentMarkers.length;\n    for (let i=0; i<currentMarkersLength; i++){\n        // console.log('removing ', currentMarkers[i]);\n        currentMarkers[0].remove();\n\n    // this.loadMapMarkers(this.map);\n    }\n\n\n\n    // console.log(currentMarkers);\n    // // const currentMarkersArray = Array.from(currentMarkers);\n\n    // console.log(currentMarkers.length)\n\n    // var currentMarkersArray = []\n\n    // for (let i=0; i < 9; i++){\n    //   currentMarkersArray.push('yoohooo')\n    // }\n\n    // console.log(currentMarkersArray);\n\n\n    // currentMarkers.forEach((marker) => {\n    //   marker.remove();\n    // })\n\n  }\n\n  loadMapMarkers = (map) => {\n        //// ADDING FAV SPOTS ////\n    // after the map component is mounted, we want to add points to it\n\n\n    // map.removeLayer(1);\n\n    let filteredLocations = mapData.features.filter((item) => {\n      return this.state.activeCategories[item.properties.category] === true\n    })\n\n    filteredLocations.forEach(function(marker) {\n\n      // create a DOM element for the marker - these are the divs which house each emoji marker\n      var el = document.createElement('div');\n      \n      el.innerHTML += marker.properties.emoji;\n      el.style.fontSize = 'x-large';\n      el.id = marker.id;\n      el.className = 'marker';\n      el.coordinates = marker.geometry.coordinates;\n      el.title = marker.properties.name;\n\n      el.addEventListener('click', function() {\n        map.flyTo({center: marker._lngLat, zoom: 17})\n      });\n\n      var popup = new mapboxgl.Popup({\n        closeButton: false,\n        closeOnClick: false\n      });\n      \n      el.addEventListener('mouseenter', function() {\n        // TODO: might be cool to zoom in a bit\n\n        // TODO: move popup out of the way\n        \n        popup.setLngLat(marker._lngLat)\n          .setHTML(el.title)\n          .addTo(map);\n\n        // console.log(marker)\n      });\n\n      el.addEventListener('mouseleave', function() {\n        // TODO: might be cool to zoom out a bit\n        popup.remove();\n      });\n\n\n      \n      var marker = new mapboxgl.Marker(el)\n        .setLngLat(marker.geometry.coordinates)\n        .addTo(map);\n      \n    });\n  }\n\n\n\n  componentDidMount() {\n    const { lng, lat, zoom } = this.state;\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/light-v9',\n      center: [lng, lat],\n      zoom\n    });\n\n    this.map = map;\n    // this is necessary to make 'map' available in the .flyto function\n\n\n    this.loadMapMarkers(map)\n\n\n    map.on('move', () => {\n      const { lng, lat } = map.getCenter();\n\n      this.setState({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n  }\n\n\n  flyToLocation = (location) => {\n    this.map.flyTo({\n      center: location,\n      zoom: 17\n    })\n  }\n\n  \n  render() {\n    const { lng, lat, zoom } = this.state;\n\n    return (\n      <div>\n      <StyledMap>\n        <div ref={el => this.mapContainer = el} style={{\n          position: 'fixed',\n          top: 0,\n          bottom: 0,\n          width: '100%',\n          height: '100%',\n          }} />\n      </StyledMap>\n      <TileList \n        flyToLocation={this.flyToLocation.bind(this)}\n        categories={this.state.activeCategories}\n      />\n      <CategoryList\n        activeCategories={this.state.activeCategories}\n        onCategoryClick={this.onCategoryClick}\n      />\n      </div>\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}