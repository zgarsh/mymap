{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/zacharygarcia/Dev/react/mymap/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/zacharygarcia/Dev/react/mymap/src/components/map.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  z-index: 1;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport mapboxgl from 'mapbox-gl';\nimport mapData from './data.json';\nimport { removeProperties } from '@babel/types';\nimport 'mapbox-gl/dist/mapbox-gl.css'; // publicly available token\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\nconst StyledMap = styled.div(_templateObject());\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.flyToHiTops = () => {\n      flyTo({\n        center: [-122.431822, 37.764998],\n        zoom: 15\n      });\n    };\n\n    this.state = {\n      lng: -122.4397,\n      lat: 37.7626,\n      zoom: 10\n    };\n  }\n\n  // componentDidMount() is a react function that is called immediately after the render function. 'mounting' means inserting a component into the tree\n  // note: if you need to get data from a remote endpoint, this is the place to do it!\n  componentDidMount() {\n    const _this$state = this.state,\n          lng = _this$state.lng,\n          lat = _this$state.lat,\n          zoom = _this$state.zoom;\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/light-v9',\n      center: [lng, lat],\n      zoom\n    }); //// ADDING FAV SPOTS ////\n    // after the map component is mounted, we want to add points to it\n\n    mapData.features.forEach(function (marker) {\n      // create a DOM element for the marker - these are the divs which house each emoji marker\n      var el = document.createElement('div'); // el.className = 'mark';\n\n      el.innerHTML += marker.properties.emoji;\n      el.style.fontSize = 'x-large';\n      el.style.backgroundColor = 'rgb(230, 230, 230, 0.5)';\n      el.style.border = '1px solid black';\n      el.style.borderRadius = '5px';\n      el.style.padding = '5px'; // el.addEventListener('click', function() {\n      // window.alert('nothing to see here');\n      // });\n\n      new mapboxgl.Marker(el).setLngLat(marker.geometry.coordinates).addTo(map);\n    });\n    map.on('move', () => {\n      const _map$getCenter = map.getCenter(),\n            lng = _map$getCenter.lng,\n            lat = _map$getCenter.lat;\n\n      this.setState({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    }); // function flyToHiTops () {\n    //   map.flyTo({\n    //     center: [-122.431822, 37.764998],\n    //     zoom: 15\n    //   })\n    // }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          lng = _this$state2.lng,\n          lat = _this$state2.lat,\n          zoom = _this$state2.zoom;\n    return React.createElement(StyledMap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      style: {\n        position: 'fixed',\n        top: 0,\n        bottom: 0,\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/zacharygarcia/Dev/react/mymap/src/components/map.js"],"names":["React","styled","mapboxgl","mapData","removeProperties","accessToken","StyledMap","div","Map","Component","constructor","props","flyToHiTops","flyTo","center","zoom","state","lng","lat","componentDidMount","map","container","mapContainer","style","features","forEach","marker","el","document","createElement","innerHTML","properties","emoji","fontSize","backgroundColor","border","borderRadius","padding","Marker","setLngLat","geometry","coordinates","addTo","on","getCenter","setState","toFixed","getZoom","render","position","top","bottom","width","height"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport mapboxgl from 'mapbox-gl'\nimport mapData from './data.json'\nimport { removeProperties } from '@babel/types';\n\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\n\n\n// publicly available token\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\nconst StyledMap = styled.div`\n  z-index: 1;\n`\n\nclass Map extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -122.4397,\n      lat: 37.7626,\n      zoom: 10\n    };\n  }\n\n\n  flyToHiTops = () => {\n    flyTo({\n          center: [-122.431822, 37.764998],\n          zoom: 15\n        })\n  }\n\n\n  // componentDidMount() is a react function that is called immediately after the render function. 'mounting' means inserting a component into the tree\n  // note: if you need to get data from a remote endpoint, this is the place to do it!\n  componentDidMount() {\n    const { lng, lat, zoom } = this.state;\n\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/light-v9',\n      center: [lng, lat],\n      zoom\n    });\n\n\n    //// ADDING FAV SPOTS ////\n    // after the map component is mounted, we want to add points to it\n    mapData.features.forEach(function(marker) {\n      // create a DOM element for the marker - these are the divs which house each emoji marker\n      var el = document.createElement('div');\n      \n      // el.className = 'mark';\n      el.innerHTML += marker.properties.emoji;\n      el.style.fontSize = 'x-large';\n      el.style.backgroundColor = 'rgb(230, 230, 230, 0.5)';\n      el.style.border = '1px solid black';\n      el.style.borderRadius = '5px';\n      el.style.padding = '5px';\n       \n      // el.addEventListener('click', function() {\n      // window.alert('nothing to see here');\n      // });\n       \n      new mapboxgl.Marker(el)\n      .setLngLat(marker.geometry.coordinates)\n      .addTo(map);\n      });\n\n\n    map.on('move', () => {\n      const { lng, lat } = map.getCenter();\n\n      this.setState({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n\n\n    \n    // function flyToHiTops () {\n    //   map.flyTo({\n    //     center: [-122.431822, 37.764998],\n    //     zoom: 15\n    //   })\n    // }\n\n  }\n\n  \n\n\n\n\n\n  render() {\n    const { lng, lat, zoom } = this.state;\n\n    return (\n      <StyledMap>\n        <div ref={el => this.mapContainer = el} style={{\n          position: 'fixed',\n          top: 0,\n          bottom: 0,\n          width: '100%',\n          height: '100%',\n          }} />\n      </StyledMap>\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}