{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/zacharygarcia/Dev/react/mymap/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/zacharygarcia/Dev/react/mymap/src/components/map.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  z-index: 1;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport mapboxgl from 'mapbox-gl';\nimport mapData from './data.json';\nimport { removeProperties } from '@babel/types';\nimport 'mapbox-gl/dist/mapbox-gl.css'; // publicly available token\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\nconst StyledMap = styled.div(_templateObject());\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -122.4397,\n      lat: 37.7626,\n      zoom: 10\n    };\n  }\n\n  componentDidMount() {\n    const _this$state = this.state,\n          lng = _this$state.lng,\n          lat = _this$state.lat,\n          zoom = _this$state.zoom;\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/light-v9',\n      center: [lng, lat],\n      zoom\n    });\n    mapData.features.forEach(function (marker) {\n      // create a DOM element for the marker\n      var el = document.createElement('div');\n      el.className = 'marker';\n      el.innerHTML += marker.properties.emoji;\n      el.style.backgroundColor = 'blue'; // el.style.text\n      // el.style.backgroundImage = 'url(https://placekitten.com/g/' + '40/40' + '/)';\n      // el.style.width = '40px';\n      // el.style.height = '40px';\n      // el.addEventListener('click', function() {\n      // window.alert('nothing to see here');\n      // });\n      // add marker to map\n\n      new mapboxgl.Marker(el).setLngLat(marker.geometry.coordinates).addTo(map);\n    });\n    map.on('load', function () {\n      map.addLayer({\n        id: 'favSpots',\n        type: 'symbol',\n        source: {\n          type: 'geojson',\n          data: mapData\n        },\n        layout: {\n          'icon-image': 'hospital-15'\n        },\n        paint: {\n          'icon-color': 'red'\n        }\n      });\n    });\n    map.on('move', () => {\n      const _map$getCenter = map.getCenter(),\n            lng = _map$getCenter.lng,\n            lat = _map$getCenter.lat;\n\n      this.setState({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          lng = _this$state2.lng,\n          lat = _this$state2.lat,\n          zoom = _this$state2.zoom;\n    return React.createElement(StyledMap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      style: {\n        position: 'fixed',\n        top: 0,\n        bottom: 0,\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/zacharygarcia/Dev/react/mymap/src/components/map.js"],"names":["React","styled","mapboxgl","mapData","removeProperties","accessToken","StyledMap","div","Map","Component","constructor","props","state","lng","lat","zoom","componentDidMount","map","container","mapContainer","style","center","features","forEach","marker","el","document","createElement","className","innerHTML","properties","emoji","backgroundColor","Marker","setLngLat","geometry","coordinates","addTo","on","addLayer","id","type","source","data","layout","paint","getCenter","setState","toFixed","getZoom","render","position","top","bottom","width","height"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport mapboxgl from 'mapbox-gl'\nimport mapData from './data.json'\nimport { removeProperties } from '@babel/types';\n\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\n\n\n// publicly available token\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\nconst StyledMap = styled.div`\n  z-index: 1;\n`\n\nclass Map extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -122.4397,\n      lat: 37.7626,\n      zoom: 10\n    };\n  }\n\n  componentDidMount() {\n    const { lng, lat, zoom } = this.state;\n\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/light-v9',\n      center: [lng, lat],\n      zoom\n    });\n\n\n\n\n\n\n\n\n\n    mapData.features.forEach(function(marker) {\n      // create a DOM element for the marker\n      var el = document.createElement('div');\n      el.className = 'marker';\n      el.innerHTML += marker.properties.emoji;\n      el.style.backgroundColor = 'blue';\n      // el.style.text\n      // el.style.backgroundImage = 'url(https://placekitten.com/g/' + '40/40' + '/)';\n      // el.style.width = '40px';\n      // el.style.height = '40px';\n       \n      // el.addEventListener('click', function() {\n      // window.alert('nothing to see here');\n      // });\n       \n      // add marker to map\n      new mapboxgl.Marker(el)\n      .setLngLat(marker.geometry.coordinates)\n      .addTo(map);\n      });\n\n\n\n\n\n\n\n\n\n\n\n\n    map.on('load', function() {\n      map.addLayer({\n        id: 'favSpots',\n        type: 'symbol',\n        source: {\n          type: 'geojson',\n          data: mapData\n        },\n        layout: {\n          'icon-image': 'hospital-15',\n        },\n        paint: {\n          'icon-color': 'red'\n        }\n      });\n    });\n\n    map.on('move', () => {\n      const { lng, lat } = map.getCenter();\n\n      this.setState({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n\n  }\n\n  render() {\n    const { lng, lat, zoom } = this.state;\n\n    return (\n      <StyledMap>\n        <div ref={el => this.mapContainer = el} style={{\n          position: 'fixed',\n          top: 0,\n          bottom: 0,\n          width: '100%',\n          height: '100%',\n          }} />\n      </StyledMap>\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}