{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/zacharygarcia/Dev/react/mymap/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/zacharygarcia/Dev/react/mymap/src/components/category.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  float: right;\\n  margin: 5px;\\n  padding: 5px 10px;\\n  border-radius: 10px;\\n  /* background: rgb(230, 230, 230, 0.7); */\\n  z-index: 2;\\n  height: 35px;\\n  text-align: center;\\n  font-size: 20;\\n\\n  /* :hover {\\n      background: rgb(105, 182, 223, 0.6);\\n      cursor: pointer;\\n  } */\\n\\n  background-color: \", \";\\n\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components'; // let colorStatus = {{this.props.isActive}}\n\nconst CategoryStyle = styled.div(_templateObject(), props => props.isActive ? \"rgb(230, 230, 230, 0.7)\" : \"green\");\n\nclass CategoryCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeCategories: this.props.activeCategories\n    }; // This bind is necessary to make `this` work in the callback in handleClick()\n    // this.handleClick = this.handleClick.bind(this);\n  } // handleClick(){\n  //   // console.log(this)\n  //   // console.log('click! from category')\n  //   this.setState(state => ({\n  //     isActive: !state.isActive\n  //   }));\n  // }\n\n\n  render() {\n    return React.createElement(CategoryStyle, {\n      onClick: () => this.props.onCategoryClick(this.props.category),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.props.category, \" -\", JSON.stringify(this.props.isActive));\n  }\n\n}\n\nexport default CategoryCard;","map":{"version":3,"sources":["/Users/zacharygarcia/Dev/react/mymap/src/components/category.js"],"names":["React","styled","CategoryStyle","div","props","isActive","CategoryCard","Component","constructor","state","activeCategories","render","onCategoryClick","category","JSON","stringify"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAGA;;AAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAV,oBAiBIC,KAAD,IAAYA,KAAK,CAACC,QAAN,GAAiB,yBAAjB,GAA6C,OAjB5D,CAAnB;;AAsBA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA0C;AACxCC,EAAAA,WAAW,CAACJ,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKK,KAAL,GAAa;AACXC,MAAAA,gBAAgB,EAAE,KAAKN,KAAL,CAAWM;AADlB,KAAb,CAHgB,CAOhB;AACA;AACD,GAVuC,CAYxC;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAE;AAIN,WACI,oBAAC,aAAD;AACE,MAAA,OAAO,EAAE,MAAI,KAAKP,KAAL,CAAWQ,eAAX,CAA2B,KAAKR,KAAL,CAAWS,QAAtC,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGK,KAAKT,KAAL,CAAWS,QAHhB,QAIKC,IAAI,CAACC,SAAL,CAAe,KAAKX,KAAL,CAAWC,QAA1B,CAJL,CADJ;AAQD;;AAjCuC;;AAoC1C,eAAeC,YAAf","sourcesContent":["import React from 'react';\n\nimport styled from 'styled-components';\n\n\n// let colorStatus = {{this.props.isActive}}\n\nconst CategoryStyle = styled.div`\n  position: relative;\n  float: right;\n  margin: 5px;\n  padding: 5px 10px;\n  border-radius: 10px;\n  /* background: rgb(230, 230, 230, 0.7); */\n  z-index: 2;\n  height: 35px;\n  text-align: center;\n  font-size: 20;\n\n  /* :hover {\n      background: rgb(105, 182, 223, 0.6);\n      cursor: pointer;\n  } */\n\n  background-color: ${(props) =>  props.isActive ? \"rgb(230, 230, 230, 0.7)\" : \"green\"};\n\n`;\n\n\nclass CategoryCard extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      activeCategories: this.props.activeCategories,\n    };\n\n    // This bind is necessary to make `this` work in the callback in handleClick()\n    // this.handleClick = this.handleClick.bind(this);\n  }\n\n  // handleClick(){\n  //   // console.log(this)\n  //   // console.log('click! from category')\n\n  //   this.setState(state => ({\n  //     isActive: !state.isActive\n  //   }));\n  // }\n\n  render(){\n\n\n    \n    return(\n        <CategoryStyle\n          onClick={()=>this.props.onCategoryClick(this.props.category)}\n        >\n            {this.props.category} - \n            {JSON.stringify(this.props.isActive)}\n        </CategoryStyle>\n  );\n  }\n}\n\nexport default CategoryCard;\n"]},"metadata":{},"sourceType":"module"}